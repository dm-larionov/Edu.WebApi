// <auto-generated />
using System;
using Edu.WebApi.Infrastructure.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Migrators.MSSQL.Migrations.Application
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Edu")
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CathedraSpecialty", b =>
                {
                    b.Property<int>("CathedraId")
                        .HasColumnType("int")
                        .HasColumnName("Cathedra_id");

                    b.Property<int>("FsesCategoryPartitionId")
                        .HasColumnType("int")
                        .HasColumnName("Fses_category_partition_id");

                    b.HasKey("CathedraId", "FsesCategoryPartitionId");

                    b.HasIndex(new[] { "FsesCategoryPartitionId" }, "IX_Cathedra_specialties_Specialtie_id");

                    b.ToTable("Cathedra_specialties", "Edu");
                });

            modelBuilder.Entity("EducationPlanSemesterDiscipline", b =>
                {
                    b.Property<int>("EducationPlanId")
                        .HasColumnType("int")
                        .HasColumnName("Education_plan_id");

                    b.Property<int>("DisciplineSemesterId")
                        .HasColumnType("int")
                        .HasColumnName("Discipline_semester_id");

                    b.HasKey("EducationPlanId", "DisciplineSemesterId");

                    b.HasIndex(new[] { "DisciplineSemesterId" }, "IX_Education_plan_semester_disciplines_Discipline_semester_id");

                    b.ToTable("Education_plan_semester_disciplines", "Edu");
                });

            modelBuilder.Entity("EmployeeCathedra", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("Employee_id");

                    b.Property<int>("CathedraId")
                        .HasColumnType("int")
                        .HasColumnName("Cathedra_id");

                    b.HasKey("EmployeeId", "CathedraId");

                    b.HasIndex(new[] { "CathedraId" }, "IX_Employee_cathedras_Cathedra_id");

                    b.ToTable("Employee_cathedras", "Edu");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.Catalog.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Brands", "Catalog");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.Catalog.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products", "Catalog");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.Audience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AudienceTypeId")
                        .HasColumnType("int")
                        .HasColumnName("Audience_type_id");

                    b.Property<short?>("Capacity")
                        .HasColumnType("smallint");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeHeadId")
                        .HasColumnType("int")
                        .HasColumnName("Employee_head_id");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "AudienceTypeId" }, "IX_Audiences_Audience_type_id");

                    b.HasIndex(new[] { "EmployeeHeadId" }, "IX_Audiences_Employee_head_id");

                    b.ToTable("Audiences", "Edu");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.AudienceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Audience_types", "Edu");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.Cathedra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("NameAbbreviation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Name_abbreviation");

                    b.HasKey("Id");

                    b.ToTable("Cathedras", "Edu");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CathedraId")
                        .HasColumnType("int")
                        .HasColumnName("Cathedra_id");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DisciplineIndex")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Discipline_index");

                    b.Property<int>("EducationCycleId")
                        .HasColumnType("int")
                        .HasColumnName("Education_cycle_id");

                    b.Property<int?>("EducationModuleId")
                        .HasColumnType("int")
                        .HasColumnName("Education_module_id");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.HasKey("Id");

                    b.HasIndex("EducationModuleId");

                    b.HasIndex(new[] { "CathedraId" }, "IX_Disciplines_Cathedra_id");

                    b.HasIndex(new[] { "EducationCycleId" }, "IX_Disciplines_Education_cycle_id");

                    b.ToTable("Disciplines", "Edu");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.DisciplineSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AudienceId")
                        .HasColumnType("int")
                        .HasColumnName("Audience_id");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("FixedDisciplineId")
                        .HasColumnType("int")
                        .HasColumnName("Fixed_discipline_id");

                    b.Property<bool?>("IsEvenPair")
                        .HasColumnType("bit")
                        .HasColumnName("Is_even_pair");

                    b.Property<bool?>("IsFirstSubgroup")
                        .HasColumnType("bit")
                        .HasColumnName("Is_first_subgroup");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PairNumber")
                        .HasColumnType("int")
                        .HasColumnName("Pair_number");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "AudienceId" }, "IX_Discipline_schedules_Audience_id");

                    b.HasIndex(new[] { "FixedDisciplineId" }, "IX_Discipline_schedules_Fixed_discipline_id");

                    b.ToTable("Discipline_schedules", "Edu");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.DisciplineScheduleReplacement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AudienceId")
                        .HasColumnType("int")
                        .HasColumnName("Audience_id");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisciplineScheduleId")
                        .HasColumnType("int")
                        .HasColumnName("Discipline_schedule_id");

                    b.Property<int>("FixedDisciplineId")
                        .HasColumnType("int")
                        .HasColumnName("Fixed_discipline_id");

                    b.Property<bool?>("IsFirstSubgroup")
                        .HasColumnType("bit")
                        .HasColumnName("Is_first_subgroup");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PairNumber")
                        .HasColumnType("int")
                        .HasColumnName("Pair_number");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "AudienceId" }, "IX_Discipline_schedule_replacement_Audience_id");

                    b.HasIndex(new[] { "DisciplineScheduleId" }, "IX_Discipline_schedule_replacement_Discipline_schedule_id");

                    b.HasIndex(new[] { "FixedDisciplineId" }, "IX_Discipline_schedule_replacement_Fixed_discipline_id");

                    b.ToTable("Discipline_schedule_replacements", "Edu");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.DisciplineSemester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CertificationFormId")
                        .HasColumnType("int")
                        .HasColumnName("Certification_form_id");

                    b.Property<short>("ConsultationHours")
                        .HasColumnType("smallint")
                        .HasColumnName("Consultation_hours");

                    b.Property<short>("ControlWorkHours")
                        .HasColumnType("smallint")
                        .HasColumnName("Control_work_hours");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int")
                        .HasColumnName("Discipline_id");

                    b.Property<short>("EducationalPracticeHours")
                        .HasColumnType("smallint")
                        .HasColumnName("Educational_practice_hours");

                    b.Property<short>("ExamHours")
                        .HasColumnType("smallint")
                        .HasColumnName("Exam_hours");

                    b.Property<short>("IndependentWorkHours")
                        .HasColumnType("smallint")
                        .HasColumnName("Independent_work_hours");

                    b.Property<short>("LaboratoryWorkHours")
                        .HasColumnType("smallint")
                        .HasColumnName("Laboratory_work_hours");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<short>("PracticeWorkHours")
                        .HasColumnType("smallint")
                        .HasColumnName("Practice_work_hours");

                    b.Property<short>("ProductionPracticeHours")
                        .HasColumnType("smallint")
                        .HasColumnName("Production_practice_hours");

                    b.Property<byte>("SemesterNumber")
                        .HasColumnType("tinyint")
                        .HasColumnName("Semester_number");

                    b.Property<short>("TheoryLessonHours")
                        .HasColumnType("smallint")
                        .HasColumnName("Theory_lesson_hours");

                    b.Property<byte?>("WeeksCount")
                        .HasColumnType("tinyint")
                        .HasColumnName("Weeks_count");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CertificationFormId" }, "IX_Discipline_semesters_Certification_form_id");

                    b.HasIndex(new[] { "DisciplineId" }, "IX_Discipline_semesters_Discipline_id");

                    b.ToTable("Discipline_semesters", "Edu");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.EducationCycle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("EducationCycleIndex")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Education_cycle_index");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("Id");

                    b.ToTable("Education_cycles", "Edu");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.EducationForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Education_forms", "Edu");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.EducationLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Education_levels", "Edu");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.EducationModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("EducationModuleIndex")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Education_module_index");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)");

                    b.HasKey("Id");

                    b.ToTable("Education_modules", "Edu");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.EducationPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<short>("BeginingYear")
                        .HasColumnType("smallint")
                        .HasColumnName("Begining_year");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<short>("EndingYear")
                        .HasColumnType("smallint")
                        .HasColumnName("Ending_year");

                    b.Property<int>("FsesCategoryPartitionId")
                        .HasColumnType("int")
                        .HasColumnName("Fses_category_partition_id");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "FsesCategoryPartitionId" }, "IX_Education_plans_Specialtie_id");

                    b.ToTable("Education_plans", "Edu");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Middlename")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("Post_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "PostId" }, "IX_Employees_Post_id");

                    b.ToTable("Employees", "Edu");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.FixedDiscipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisciplineSemesterId")
                        .HasColumnType("int")
                        .HasColumnName("Discipline_semester_id");

                    b.Property<int>("FixedDisciplineStatusId")
                        .HasColumnType("int")
                        .HasColumnName("Fixed_discipline_status_id");

                    b.Property<int>("FixingEmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("Fixing_employee_id");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentGroupId")
                        .HasColumnType("int")
                        .HasColumnName("Student_group_id");

                    b.HasKey("Id");

                    b.HasIndex("FixedDisciplineStatusId");

                    b.HasIndex(new[] { "DisciplineSemesterId" }, "IX_Fixed_disciplines_Discipline_semester_id");

                    b.HasIndex(new[] { "FixingEmployeeId" }, "IX_Fixed_disciplines_Employee_id");

                    b.HasIndex(new[] { "StudentGroupId" }, "IX_Fixed_disciplines_Student_group_id");

                    b.ToTable("Fixed_disciplines", "Edu");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.FixedDisciplineStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)");

                    b.HasKey("Id");

                    b.ToTable("Fixed_discipline_statuses", "Edu");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.FsesCategoryPartition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("FirstPartNumber")
                        .HasColumnType("int")
                        .HasColumnName("First_part_number");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NameAbbreviation")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("Name_abbreviation")
                        .IsFixedLength();

                    b.Property<int>("SecondPartNumber")
                        .HasColumnType("int")
                        .HasColumnName("Second_part_number");

                    b.Property<short?>("ThirdPathNumber")
                        .HasColumnType("smallint")
                        .HasColumnName("Third_path_number");

                    b.HasKey("Id");

                    b.ToTable("Fses_category_partitions", "Edu");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.IntermediateCertificationForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Intermediate_certification_forms", "Edu");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.ToTable("Posts", "Edu");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.ReceivedEducation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EducationLevelId")
                        .HasColumnType("int")
                        .HasColumnName("Education_level_id");

                    b.Property<bool>("IsBudget")
                        .HasColumnType("bit")
                        .HasColumnName("Is_budget");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReceivedEducationFormId")
                        .HasColumnType("int")
                        .HasColumnName("Received_education_form_id");

                    b.Property<int>("ReceivedSpecialtyId")
                        .HasColumnType("int")
                        .HasColumnName("Received_specialty_id");

                    b.Property<short>("StudyPeriodMonths")
                        .HasColumnType("smallint")
                        .HasColumnName("Study_period_months");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EducationLevelId" }, "IX_Received_educations_Education_level_id");

                    b.HasIndex(new[] { "ReceivedEducationFormId" }, "IX_Received_educations_Received_education_form_id");

                    b.HasIndex(new[] { "ReceivedSpecialtyId" }, "IX_Received_educations_Received_specialty_id");

                    b.ToTable("Received_educations", "Edu");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.ReceivedEducationForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdditionalInfo")
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)")
                        .HasColumnName("Additional_info");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EducationFormId")
                        .HasColumnType("int")
                        .HasColumnName("Education_form_id");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EducationFormId" }, "IX_Received_education_forms_Education_form_id");

                    b.ToTable("Received_education_forms", "Edu");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.ReceivedSpecialty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("FsesCategoryPartitionId")
                        .HasColumnType("int")
                        .HasColumnName("Fses_category_partition_id");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Qualification")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "FsesCategoryPartitionId" }, "IX_Received_specialties_Specialtie_id");

                    b.ToTable("Received_specialties", "Edu");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.StudentGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte>("CourseNumber")
                        .HasColumnType("tinyint")
                        .HasColumnName("Course_number");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CuratorId")
                        .HasColumnType("int")
                        .HasColumnName("Curator_id");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EducationPlanId")
                        .HasColumnType("int")
                        .HasColumnName("Education_plan_id");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<short>("ReceiptYear")
                        .HasColumnType("smallint")
                        .HasColumnName("Receipt_year");

                    b.Property<int>("ReceivedEducationId")
                        .HasColumnType("int")
                        .HasColumnName("Received_education_id");

                    b.Property<byte>("StudentQuantity")
                        .HasColumnType("tinyint")
                        .HasColumnName("Student_quantity");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CuratorId" }, "IX_Groups_Curator_id");

                    b.HasIndex(new[] { "EducationPlanId" }, "IX_Groups_Education_plan_id");

                    b.HasIndex(new[] { "ReceivedEducationId" }, "IX_Groups_Received_education_id");

                    b.ToTable("Student_groups", "Edu");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.StudentGroupNameChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("StudentGroupId")
                        .HasColumnType("int")
                        .HasColumnName("Student_group_id");

                    b.HasKey("Id");

                    b.HasIndex("StudentGroupId");

                    b.ToTable("Student_group_name_changes", "Edu");
                });

            modelBuilder.Entity("Edu.WebApi.Infrastructure.Auditing.Trail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AffectedColumns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AuditTrails", "Auditing");
                });

            modelBuilder.Entity("Edu.WebApi.Infrastructure.Identity.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", "Identity");
                });

            modelBuilder.Entity("Edu.WebApi.Infrastructure.Identity.ApplicationRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", "Identity");
                });

            modelBuilder.Entity("Edu.WebApi.Infrastructure.Identity.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ObjectId")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", "Identity");
                });

            modelBuilder.Entity("CathedraSpecialty", b =>
                {
                    b.HasOne("Edu.WebApi.Domain.EducationProcess.Cathedra", null)
                        .WithMany()
                        .HasForeignKey("CathedraId")
                        .IsRequired()
                        .HasConstraintName("FK_Cathedra_specialties_Cathedras");

                    b.HasOne("Edu.WebApi.Domain.EducationProcess.FsesCategoryPartition", null)
                        .WithMany()
                        .HasForeignKey("FsesCategoryPartitionId")
                        .IsRequired()
                        .HasConstraintName("FK_Cathedra_specialties_Fses_category_partitions");
                });

            modelBuilder.Entity("EducationPlanSemesterDiscipline", b =>
                {
                    b.HasOne("Edu.WebApi.Domain.EducationProcess.DisciplineSemester", null)
                        .WithMany()
                        .HasForeignKey("DisciplineSemesterId")
                        .IsRequired()
                        .HasConstraintName("FK_Education_plan_semester_disciplines_Semester_disciplines");

                    b.HasOne("Edu.WebApi.Domain.EducationProcess.EducationPlan", null)
                        .WithMany()
                        .HasForeignKey("EducationPlanId")
                        .IsRequired()
                        .HasConstraintName("FK_Education_plan_semester_disciplines_Education_plans");
                });

            modelBuilder.Entity("EmployeeCathedra", b =>
                {
                    b.HasOne("Edu.WebApi.Domain.EducationProcess.Cathedra", null)
                        .WithMany()
                        .HasForeignKey("CathedraId")
                        .IsRequired()
                        .HasConstraintName("FK_Employee_cathedras_Cathedras");

                    b.HasOne("Edu.WebApi.Domain.EducationProcess.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK_Employee_cathedras_Employees");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.Catalog.Product", b =>
                {
                    b.HasOne("Edu.WebApi.Domain.Catalog.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.Audience", b =>
                {
                    b.HasOne("Edu.WebApi.Domain.EducationProcess.AudienceType", "AudienceType")
                        .WithMany("Audiences")
                        .HasForeignKey("AudienceTypeId")
                        .HasConstraintName("FK_Audiences_Audience_types");

                    b.HasOne("Edu.WebApi.Domain.EducationProcess.Employee", "EmployeeHead")
                        .WithMany("Audiences")
                        .HasForeignKey("EmployeeHeadId")
                        .HasConstraintName("FK_Audiences_Employees");

                    b.Navigation("AudienceType");

                    b.Navigation("EmployeeHead");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.Discipline", b =>
                {
                    b.HasOne("Edu.WebApi.Domain.EducationProcess.Cathedra", "Cathedra")
                        .WithMany("Disciplines")
                        .HasForeignKey("CathedraId")
                        .HasConstraintName("FK_Disciplines_Cathedras");

                    b.HasOne("Edu.WebApi.Domain.EducationProcess.EducationCycle", "EducationCycle")
                        .WithMany("Disciplines")
                        .HasForeignKey("EducationCycleId")
                        .IsRequired()
                        .HasConstraintName("FK_Disciplines_Education_cycles_and_modules");

                    b.HasOne("Edu.WebApi.Domain.EducationProcess.EducationModule", "EducationModule")
                        .WithMany("Disciplines")
                        .HasForeignKey("EducationModuleId")
                        .HasConstraintName("FK_Disciplines_Education_modules");

                    b.Navigation("Cathedra");

                    b.Navigation("EducationCycle");

                    b.Navigation("EducationModule");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.DisciplineSchedule", b =>
                {
                    b.HasOne("Edu.WebApi.Domain.EducationProcess.Audience", "Audience")
                        .WithMany("DisciplineSchedules")
                        .HasForeignKey("AudienceId")
                        .HasConstraintName("FK_Discipline_schedules_Audiences");

                    b.HasOne("Edu.WebApi.Domain.EducationProcess.FixedDiscipline", "FixedDiscipline")
                        .WithMany("DisciplineSchedules")
                        .HasForeignKey("FixedDisciplineId")
                        .IsRequired()
                        .HasConstraintName("FK_Discipline_schedules_Fixed_disciplines");

                    b.Navigation("Audience");

                    b.Navigation("FixedDiscipline");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.DisciplineScheduleReplacement", b =>
                {
                    b.HasOne("Edu.WebApi.Domain.EducationProcess.Audience", "Audience")
                        .WithMany("DisciplineScheduleReplacements")
                        .HasForeignKey("AudienceId")
                        .HasConstraintName("FK_Discipline_schedule_replacement_Audiences");

                    b.HasOne("Edu.WebApi.Domain.EducationProcess.DisciplineSchedule", "DisciplineSchedule")
                        .WithMany("DisciplineScheduleReplacements")
                        .HasForeignKey("DisciplineScheduleId")
                        .HasConstraintName("FK_Discipline_schedule_replacement_Discipline_schedules");

                    b.HasOne("Edu.WebApi.Domain.EducationProcess.FixedDiscipline", "FixedDiscipline")
                        .WithMany("DisciplineScheduleReplacements")
                        .HasForeignKey("FixedDisciplineId")
                        .IsRequired()
                        .HasConstraintName("FK_Discipline_schedule_replacement_Fixed_disciplines");

                    b.Navigation("Audience");

                    b.Navigation("DisciplineSchedule");

                    b.Navigation("FixedDiscipline");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.DisciplineSemester", b =>
                {
                    b.HasOne("Edu.WebApi.Domain.EducationProcess.IntermediateCertificationForm", "CertificationForm")
                        .WithMany("DisciplineSemesters")
                        .HasForeignKey("CertificationFormId")
                        .HasConstraintName("FK_Discipline_semesters_Intermediate_certification_forms");

                    b.HasOne("Edu.WebApi.Domain.EducationProcess.Discipline", "Discipline")
                        .WithMany("DisciplineSemesters")
                        .HasForeignKey("DisciplineId")
                        .IsRequired()
                        .HasConstraintName("FK_Discipline_Semesters_Disciplines1");

                    b.Navigation("CertificationForm");

                    b.Navigation("Discipline");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.EducationPlan", b =>
                {
                    b.HasOne("Edu.WebApi.Domain.EducationProcess.FsesCategoryPartition", "FsesCategoryPartition")
                        .WithMany("EducationPlans")
                        .HasForeignKey("FsesCategoryPartitionId")
                        .IsRequired()
                        .HasConstraintName("FK_Education_plans_Fses_category_partitions");

                    b.Navigation("FsesCategoryPartition");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.Employee", b =>
                {
                    b.HasOne("Edu.WebApi.Domain.EducationProcess.Post", "Post")
                        .WithMany("Employees")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK_Employees_Posts");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.FixedDiscipline", b =>
                {
                    b.HasOne("Edu.WebApi.Domain.EducationProcess.DisciplineSemester", "SemesterDiscipline")
                        .WithMany("FixedDisciplines")
                        .HasForeignKey("DisciplineSemesterId")
                        .IsRequired()
                        .HasConstraintName("FK_Fixed_disciplines_Semester_disciplines");

                    b.HasOne("Edu.WebApi.Domain.EducationProcess.FixedDisciplineStatus", "FixedDisciplineStatus")
                        .WithMany("FixedDisciplines")
                        .HasForeignKey("FixedDisciplineStatusId")
                        .IsRequired()
                        .HasConstraintName("FK_Fixed_disciplines_Fixed_discipline_statuses");

                    b.HasOne("Edu.WebApi.Domain.EducationProcess.Employee", "FixingEmployee")
                        .WithMany("FixedDisciplines")
                        .HasForeignKey("FixingEmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK_Fixed_disciplines_Employees");

                    b.HasOne("Edu.WebApi.Domain.EducationProcess.StudentGroup", "Group")
                        .WithMany("FixedDisciplines")
                        .HasForeignKey("StudentGroupId")
                        .IsRequired()
                        .HasConstraintName("FK_Fixed_disciplines_Stuent_groups");

                    b.Navigation("FixedDisciplineStatus");

                    b.Navigation("FixingEmployee");

                    b.Navigation("Group");

                    b.Navigation("SemesterDiscipline");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.ReceivedEducation", b =>
                {
                    b.HasOne("Edu.WebApi.Domain.EducationProcess.EducationLevel", "EducationLevel")
                        .WithMany("ReceivedEducations")
                        .HasForeignKey("EducationLevelId")
                        .IsRequired()
                        .HasConstraintName("FK_Received_educations_Education_levels");

                    b.HasOne("Edu.WebApi.Domain.EducationProcess.ReceivedEducationForm", "ReceivedEducationForm")
                        .WithMany("ReceivedEducations")
                        .HasForeignKey("ReceivedEducationFormId")
                        .IsRequired()
                        .HasConstraintName("FK_Received_educations_Received_education_forms");

                    b.HasOne("Edu.WebApi.Domain.EducationProcess.ReceivedSpecialty", "ReceivedSpecialty")
                        .WithMany("ReceivedEducations")
                        .HasForeignKey("ReceivedSpecialtyId")
                        .IsRequired()
                        .HasConstraintName("FK_Received_educations_Received_specialties");

                    b.Navigation("EducationLevel");

                    b.Navigation("ReceivedEducationForm");

                    b.Navigation("ReceivedSpecialty");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.ReceivedEducationForm", b =>
                {
                    b.HasOne("Edu.WebApi.Domain.EducationProcess.EducationForm", "EducationForm")
                        .WithMany("ReceivedEducationForms")
                        .HasForeignKey("EducationFormId")
                        .IsRequired()
                        .HasConstraintName("FK_Received_education_forms_Education_forms");

                    b.Navigation("EducationForm");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.ReceivedSpecialty", b =>
                {
                    b.HasOne("Edu.WebApi.Domain.EducationProcess.FsesCategoryPartition", "FsesCategoryPartition")
                        .WithMany("ReceivedSpecialties")
                        .HasForeignKey("FsesCategoryPartitionId")
                        .IsRequired()
                        .HasConstraintName("FK_Received_specialties_Fses_category_partitions");

                    b.Navigation("FsesCategoryPartition");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.StudentGroup", b =>
                {
                    b.HasOne("Edu.WebApi.Domain.EducationProcess.Employee", "Curator")
                        .WithMany("StudentGroups")
                        .HasForeignKey("CuratorId")
                        .HasConstraintName("FK_Student_groups_Employees");

                    b.HasOne("Edu.WebApi.Domain.EducationProcess.EducationPlan", "EducationPlan")
                        .WithMany("StudentGroups")
                        .HasForeignKey("EducationPlanId")
                        .HasConstraintName("FK_Student_groups_Education_plans");

                    b.HasOne("Edu.WebApi.Domain.EducationProcess.ReceivedEducation", "ReceivedEducation")
                        .WithMany("StudentGroups")
                        .HasForeignKey("ReceivedEducationId")
                        .IsRequired()
                        .HasConstraintName("FK_Student_groups_Received_educations");

                    b.Navigation("Curator");

                    b.Navigation("EducationPlan");

                    b.Navigation("ReceivedEducation");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.StudentGroupNameChange", b =>
                {
                    b.HasOne("Edu.WebApi.Domain.EducationProcess.StudentGroup", "StudentGroup")
                        .WithMany("StudentGroupNameChanges")
                        .HasForeignKey("StudentGroupId")
                        .IsRequired()
                        .HasConstraintName("FK_Student_group_name_changes_Student_groups");

                    b.Navigation("StudentGroup");
                });

            modelBuilder.Entity("Edu.WebApi.Infrastructure.Identity.ApplicationRoleClaim", b =>
                {
                    b.HasOne("Edu.WebApi.Infrastructure.Identity.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Edu.WebApi.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Edu.WebApi.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Edu.WebApi.Infrastructure.Identity.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Edu.WebApi.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Edu.WebApi.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.Audience", b =>
                {
                    b.Navigation("DisciplineScheduleReplacements");

                    b.Navigation("DisciplineSchedules");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.AudienceType", b =>
                {
                    b.Navigation("Audiences");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.Cathedra", b =>
                {
                    b.Navigation("Disciplines");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.Discipline", b =>
                {
                    b.Navigation("DisciplineSemesters");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.DisciplineSchedule", b =>
                {
                    b.Navigation("DisciplineScheduleReplacements");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.DisciplineSemester", b =>
                {
                    b.Navigation("FixedDisciplines");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.EducationCycle", b =>
                {
                    b.Navigation("Disciplines");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.EducationForm", b =>
                {
                    b.Navigation("ReceivedEducationForms");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.EducationLevel", b =>
                {
                    b.Navigation("ReceivedEducations");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.EducationModule", b =>
                {
                    b.Navigation("Disciplines");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.EducationPlan", b =>
                {
                    b.Navigation("StudentGroups");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.Employee", b =>
                {
                    b.Navigation("Audiences");

                    b.Navigation("FixedDisciplines");

                    b.Navigation("StudentGroups");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.FixedDiscipline", b =>
                {
                    b.Navigation("DisciplineScheduleReplacements");

                    b.Navigation("DisciplineSchedules");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.FixedDisciplineStatus", b =>
                {
                    b.Navigation("FixedDisciplines");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.FsesCategoryPartition", b =>
                {
                    b.Navigation("EducationPlans");

                    b.Navigation("ReceivedSpecialties");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.IntermediateCertificationForm", b =>
                {
                    b.Navigation("DisciplineSemesters");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.Post", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.ReceivedEducation", b =>
                {
                    b.Navigation("StudentGroups");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.ReceivedEducationForm", b =>
                {
                    b.Navigation("ReceivedEducations");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.ReceivedSpecialty", b =>
                {
                    b.Navigation("ReceivedEducations");
                });

            modelBuilder.Entity("Edu.WebApi.Domain.EducationProcess.StudentGroup", b =>
                {
                    b.Navigation("FixedDisciplines");

                    b.Navigation("StudentGroupNameChanges");
                });
#pragma warning restore 612, 618
        }
    }
}
